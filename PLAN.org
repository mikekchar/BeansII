* Beans II

The file is for Emacs Org mode: http://orgmode.org/

** <2015-08-09 Sun> [7/7]
*** DONE Create Game description
    CLOSED: [2015-08-09 Sun 15:12]
*** DONE Create initial plan
    CLOSED: [2015-08-09 Sun 15:35]
*** DONE SPIKE: Investigate possibility of using ES6 features
    CLOSED: [2015-08-09 Sun 15:35]
    Coffeescript already gives me quite a bit of the stuff I want.
    The only thing really missing is Promises and that is supported
    by all current browsers.
*** DONE SPIKE: Can we use node to test?
     CLOSED: [2015-08-09 Sun 15:38]
     No. V8 in current Node is almost exactly 1 year old.  I think this is a bad
     idea, unfortunately (as much as I would like to have a complete console
     based setup).
*** DONE Deploy Beans II [4/4]
    CLOSED: [2015-08-09 Sun 21:54]
    Beans II will be written in Coffeescript, with no 3rd party dependencies
    Even though there is no code yet, deployment is the most important story,
    so I need to work it out.
**** DONE SPIKE: How do we compile assets?
     CLOSED: [2015-08-09 Sun 15:58]
     Looks like Webpack is the way to go.
**** DONE Set up npm
      CLOSED: [2015-08-09 Sun 17:08]
**** DONE Create a link from the README that will run the app.
     CLOSED: [2015-08-09 Sun 21:37]
     Looks like the only way to do this is with the gh-pages branch
**** DONE Update README to explain how to deploy
     CLOSED: [2015-08-09 Sun 21:40]
*** DONE Put link to source code on site to comply with AGPL
    CLOSED: [2015-08-09 Sun 21:53]
*** DONE Compile assets [1/1]
    CLOSED: [2015-08-09 Sun 22:16]
**** DONE Create a webpack loader that does mostly nothing
     CLOSED: [2015-08-09 Sun 22:16]
     see https://webpack.github.io/docs/tutorials/getting-started/ 
** <2015-08-10 Mon> [1/1]
*** DONE Setup jasmine [2/2]
**** DONE Install jasmine
     CLOSED: [2015-08-10 Mon 08:17]
     I think npm will probably work.
     However, it is not immediately obvious how.
     It seems that it will not work, which sucks.  Will have to include
     Jasmine in the project :-P
     Maybe a submodule is in order
**** DONE Create a separate test loader html file (see jasmine home page)
     CLOSED: [2015-08-10 Mon 08:47]

*** Pomodoro log
    1. Looked for headphones.
    2. https://egghead.io/lessons/react-unit-testing-a-react-component-using-jasmine-and-webpack
    3. Try to install Jasmine through npm
    4. Compare standalone jasmine to npm jasmine
    5. Install jasmine via submodule
    6. BIG Pomodoro.  Get the fscking jasmine runner set up. Seriously... WTF is up with documentation...
** <2015-08-15 Sat> [1/1]
*** DONE Setup up webpack    
**** DONE Create a webpack loader that builds a spec.js file

*** Pomodoro Log
    - Planning. Try to compile all the jasmine files together <2015-08-15 Sat 11:13>
    - Failing <2015-08-15 Sat 11:21>
    - Give up on making webpack compile Jasmine files <2015-08-15 Sat 11:28>
    - Make jasmine actually run a failing spec <2015-08-15 Sat 11:34>
    - Remove build files from git <2015-08-15 Sat 11:44>  
** <2015-08-16 Sun> [3/3]
*** DONE Create a Webpack config file
    CLOSED: [2015-08-16 Sun 22:56]
*** DONE Allow running of the tests from index.html
    CLOSED: [2015-08-16 Sun 23:03]
*** DONE Update the gh-pages branch
    CLOSED: [2015-08-16 Sun 23:06]
    I'm really torn about whether or not the gh-pages branch
    should be the only one with a build directory.

*** Pomodoro Log
    - Get Webpack building things.  Not really a pomodoro.
    - Publish ability to run tests to gh-pages <2015-08-16 Sun 23:07>
    - Update backlog <2015-08-16 Sun 23:14>
    - Bed time!

** <2015-08-17 Mon> [1/2]
*** DONE Build coffeescript
    CLOSED: [2015-08-17 Mon 10:43]
*** TODO Show a hand
**** TODO Make a canvas
***** TODO Find a way to test that an element exists
****** DONE Create a fake Document for tests
       CLOSED: [2015-08-17 Mon 11:35]
****** TODO Create a test structure in fake Document
**** TODO Draw a hand (somehow)
*** Pomodoro Log
    - Planning. Start bulding coffeescript loader. <2015-08-17 Mon 10:03>
    - Install webpack coffeescript loader. <2015-08-17 Mon 10:14> 
    - Futzing with webpack --watch <2015-08-17 Mon 10:33>
    - Give up on webpack --watch <2015-08-17 Mon 10:40>
    - Deploy <2015-08-17 Mon 10:43>
    - Try to include a spec file <2015-08-17 Mon 10:51>
    - Create a Document class <2015-08-17 Mon 10:59>
    - Grr... Got distracted by YGT stuff <2015-08-17 Mon 11:20>
    - Add a way to create a fake document for tests <2015-08-17 Mon 11:34>
** Backlog
*** TODO Write deploy script
    It just:
      - ensures you are on master
      - checks out gh-pages branch
      - merges master
      - runs webpack
      - commits
      - pushes gh-pages
      - checkouts out master
*** TODO Sign builds
